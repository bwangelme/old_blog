<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>翻译 on 大白的碎碎念</title>
    <link>/tags/%E7%BF%BB%E8%AF%91/</link>
    <description>Recent content in 翻译 on 大白的碎碎念</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 16 Jan 2021 13:34:40 +0800</lastBuildDate><atom:link href="/tags/%E7%BF%BB%E8%AF%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review 《Memory Consistency Models: A Tutorial》</title>
      <link>/2021/01/16/review-memory-consistency-models/</link>
      <pubDate>Sat, 16 Jan 2021 13:34:40 +0800</pubDate>
      
      <guid>/2021/01/16/review-memory-consistency-models/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://www.cs.utexas.edu/~bornholt/post/memory-models.html&#34;&gt;https://www.cs.utexas.edu/~bornholt/post/memory-models.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Review 《Using pipelining to speedup Redis queries》</title>
      <link>/2020/08/22/redis-pipelining/</link>
      <pubDate>Sat, 22 Aug 2020 17:22:37 +0800</pubDate>
      
      <guid>/2020/08/22/redis-pipelining/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://redis.io/topics/pipelining&#34;&gt;https://redis.io/topics/pipelining&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Review 《github.com/stretchr/testify》</title>
      <link>/2019/06/02/review-testify/</link>
      <pubDate>Sun, 02 Jun 2019 22:41:59 +0800</pubDate>
      
      <guid>/2019/06/02/review-testify/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://github.com/stretchr/testify&#34;&gt;https://github.com/stretchr/testify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Review 《JSON and Go》</title>
      <link>/2019/05/21/review-json-and-go/</link>
      <pubDate>Tue, 21 May 2019 21:40:40 +0800</pubDate>
      
      <guid>/2019/05/21/review-json-and-go/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://blog.golang.org/json-and-go&#34;&gt;https://blog.golang.org/json-and-go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Review 《Golang Trick: Export unexport method for test》</title>
      <link>/2019/04/27/golang-trick-export-for-test/</link>
      <pubDate>Sat, 27 Apr 2019 17:33:52 +0800</pubDate>
      
      <guid>/2019/04/27/golang-trick-export-for-test/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://medium.com/@robiplus/golang-trick-export-for-test-aa16cbd7b8cd&#34;&gt;https://medium.com/@robiplus/golang-trick-export-for-test-aa16cbd7b8cd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>PEP 492 部分翻译</title>
      <link>/2016/10/12/pep-492-%E9%83%A8%E5%88%86%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Wed, 12 Oct 2016 21:53:25 +0000</pubDate>
      
      <guid>/2016/10/12/pep-492-%E9%83%A8%E5%88%86%E7%BF%BB%E8%AF%91/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;针对&lt;a href=&#34;https://www.python.org/dev/peps/pep-0492/&#34;&gt;PEP 492&lt;/a&gt;部分进行了翻译&lt;/li&gt;
&lt;li&gt;主要讲述了 Python 的&lt;code&gt;async&lt;/code&gt;, &lt;code&gt;await&lt;/code&gt;关键字&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>More advanced if usage</title>
      <link>/2016/10/03/more-advanced-if-usage/</link>
      <pubDate>Mon, 03 Oct 2016 09:52:51 +0000</pubDate>
      
      <guid>/2016/10/03/more-advanced-if-usage/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;本文是对&lt;a href=&#34;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_02.html&#34;&gt;More advanced if usage&lt;/a&gt;的翻译&lt;/li&gt;
&lt;li&gt;主要讲述了 Bash 中 if 的一些高级用法&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Python concurrent.futures 文档翻译</title>
      <link>/2016/09/23/concurrent-futures/</link>
      <pubDate>Fri, 23 Sep 2016 11:19:16 +0000</pubDate>
      
      <guid>/2016/09/23/concurrent-futures/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文主要是对 Python3 标准库 &lt;a href=&#34;https://docs.python.org/3/library/concurrent.futures.html&#34;&gt;concurrent.futures&lt;/a&gt; 文档的翻译&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Gevent 的 KeyError</title>
      <link>/2016/09/14/gevent-keyerror/</link>
      <pubDate>Wed, 14 Sep 2016 15:21:40 +0000</pubDate>
      
      <guid>/2016/09/14/gevent-keyerror/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;本文翻译自 StackOverFlow 上的一篇&lt;a href=&#34;http://stackoverflow.com/questions/8774958/keyerror-in-module-threading-after-a-successful-py-test-run&#34;&gt;答案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;本文主要解释了&lt;code&gt;gevent&lt;/code&gt;的猴子补丁和一个&lt;code&gt;KeyError&lt;/code&gt;之间的关系&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Python字符串Format方法示例</title>
      <link>/2016/08/31/string-format-example/</link>
      <pubDate>Wed, 31 Aug 2016 15:45:41 +0000</pubDate>
      
      <guid>/2016/08/31/string-format-example/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文翻译自Python3文档&lt;a href=&#34;https://docs.python.org/3/library/string.html#format-examples&#34;&gt;6.1.3.2. Format examples&lt;/a&gt;
主要讲述了Python&lt;code&gt;str.format()&lt;/code&gt;的一些使用方法&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Python3.5新特性</title>
      <link>/2016/05/08/python3-5%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sun, 08 May 2016 14:27:17 +0000</pubDate>
      
      <guid>/2016/05/08/python3-5%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Python3.5的新特性，&lt;a href=&#34;https://docs.python.org/3/whatsnew/3.5.html&#34;&gt;原文地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;async&lt;/code&gt;和&lt;code&gt;await&lt;/code&gt;等新语法来进行协程编程&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>PEP 343: Python的with语句</title>
      <link>/2016/04/25/python%E7%9A%84with%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Mon, 25 Apr 2016 21:04:33 +0000</pubDate>
      
      <guid>/2016/04/25/python%E7%9A%84with%E8%AF%AD%E5%8F%A5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Python的with语句用法以及相关的上下文管理协议&lt;/li&gt;
&lt;li&gt;如何自己写一个上下文管理器对象，如何利用&lt;code&gt;contextlib&lt;/code&gt;来写一个上下文管理器对象&lt;/li&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://docs.python.org/release/2.5/whatsnew/pep-343.html&#34;&gt;PEP 343: The &amp;lsquo;with&amp;rsquo; statement&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
